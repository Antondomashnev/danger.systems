---
title: Danger - Stop Saying "You Forgot To..." in Code Review
---

ruby:
  require 'json'
  require 'yaml'
  example_data = YAML.load(File.read "source/examples.yml")
  dangerfiles = JSON.parse(File.read('../example_oss_dangerfiles.json'))
  plugins = JSON.parse(File.read("json_data/plugins.json"))

h2
  span What is Danger?

section
  article
    markdown:
      Danger runs after your CI, and gives teams the chance to automate common code review chores.

      This provides another logical step in your process, through this Danger can help lint your rote tasks in daily code review.

      You can use Danger to codify your teams norms. Leaving humans to think about harder problems.

h2
 span For Example

section.examples
    ul
      - for example in example_data
        li class=example["id"] data-repos=example["repos"]
          a == example["title"]
    div
      div.code_chunk
        - for example in example_data
          div class=example["id"]
              == syntax_highlight example["code"]

      ref == ""


h2
 span What magic is this?

section

  article
    h3 How
    markdown:
      Danger is ruby gem that runs a `Dangerfile`, you set up a `Dangerfile` per-project. The `Dangerfile` contains a collection of home-grown rules specific to your project.

      Danger should be installed via a Gemfile. Add `gem "danger"` to your Gemfile, then run `bundle`.

      You can integrate Danger into your own project on any available CI service. She will run through the process with you if you run  `danger init` after installation.

  article
    h3 Supports
    p <strong>Can run on</strong>: Circle, Travis, Jenkins, Buildkite, Xcode Bots, Drone, SurfCI.
    p <strong>Can chat back on</strong>: GitHub
    p <strong>Can handle diffs from</strong>: Git

    h3 Danger DSL
    markdown:
      ```
      message("message") - Declares a CI message
      warn("message") - Declares a CI warning
      fail("message") - Declares a CI blocking error
      markdown("message") - Outputs markdown
      ```
h2
  span Plugins

section
  article
    markdown:
     Danger was built to be a small core, which allows others to extend her DSL via gems as plugins. You can create a new one with `danger plugins create`.

section
  - for plugin in plugins
    == partial(:plugin_doc, locals: { plugin: plugin, external: true })

h2
 span Show me some Dangerfiles

section
  article
    markdown:
     Danger is used in all sorts of projects: ruby gems, python apps, xcode projects, blogs, npm websites and modules. You can check out some Dangerfiles from the Open Source community here.  

section.examples
  ul
    - for repo in dangerfiles
      li class=repo  data-url="/dangerfiles/#{repo.gsub("/", "_")}.html"
        a == repo.gsub("/", "<span>/</span>")

  div
    div.code_chunk

    ref == ""


h2
  span Meta

section
  article
    p Danger was built to be a small core, which allows others to extend her DSL via gems as plugins. You can create a new one with `danger plugins create`.

javascript:
    $(function() {
      $("section.examples ul li").mouseover(function(event) {
        event.preventDefault()
        console.log($(this))

        // Set the corresponding code
        var klass = $(this).attr("class").replace(" highlighted", "")

        // Set selection
        $(this).parent().children().removeClass("scope_code").removeClass("highlighted")
        $(this).addClass("highlighted")

        var parent = $(this).parents("section")
        // Is this selector for switching existing code samples?
        if ($(this).data("repos")) {
          $("div.code_chunk > div", parent).css("display", "none")
          $("div.code_chunk div." + klass, parent).css("display", "block")
        } else if( $(this).data("url") ) {
          $.get( $(this).data("url"), function(html) {
            console.log("OK")
              $("div.code_chunk", parent).empty()
              $("div.code_chunk", parent).append(html)
          })  
        }

         // Figure out the reference text
       var urls = $(this).data("repos") && $(this).data("repos").split(", ")
       var prs = "" //$(this).data("prs").split(", ")
       var toGithubLink = function(ref) {
           return "<a href='https://github.com/" + ref + "/blob/master/Dangerfile'>" + ref + "</a>"
        }
        var showArray = function(array) {
          if (!array) { return false }
          if (array.length > 1) { return true }
          if (array.length == 0) { return false }
          return array[0].length > 0
        }

        // Set the reference text under the code for people to inspect
        var text = ""
        if (showArray(urls)) {
          text += "@see_repo " + urls.map(toGithubLink).join(", ")
        }
        if (showArray(urls) && showArray(prs)) {
          text += "<br/>"
        }
        if (showArray(prs)) {
          text += "@see_pr "+ prs.map(toGithubLink).join(", ")
        }
        $("ref", parent).html(text)
      })

      // Set the selection to be the first
      $("section.examples ul li:first-child").trigger('mouseenter')
    });