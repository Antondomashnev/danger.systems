---
title: Danger - Stop Saying "You Forgot To..." in Code Review
---

ruby:
  require 'json'
  require 'yaml'
  example_data = YAML.load(File.read "source/examples.yml")

section
  h2
    span What is Danger?
  article
    p Danger runs after your CI, and gives teams the chance to automate common code review chores.
    p This provides another logical step in your process, through this Danger can help lint your rote tasks in daily code review.
    p You can use Danger to codify your teams norms. Leaving humans to think about harder problems.
  .clearfix

section.examples
  h2
   span For Example

  .example_content
    ul
      - for example in example_data
        li class=example["id"] data-repos=example["repos"]
          a == example["title"]
    div
      div.code_chunk
        - for example in example_data
          div class=example["id"]
              == syntax_highlight example["code"]

      ref == "# See artsy/eigen"

      .clearfix

section
  h2
   span What magic is this?

  article
    h3 How
    markdown:
      Danger is ruby gem that runs a `Dangerfile`, you set up a `Dangerfile` per-project. The `Dangerfile` contains a collection of home-grown rules specific to your project.

      Danger should be installed via a Gemfile. Add `gem "danger"` to your Gemfile, then run `bundle`.

      You can integrate Danger into your own project on any available CI service. She will run through the process with you if you run  `danger init` after installation.

  article
    h3 Supports
    p <strong>Can be run on</strong>: Circle, Travis, Jenkins, Buildkite, Xcode Bots, Drone.
    p <strong>Can chat back on</strong>: GitHub
    p <strong>Can handle diffs from</strong>: Git

    h3 Danger DSL
    markdown:
      ```
      message("message") - Declares a CI message
      warn("message") - Declares a CI warning
      fail("message") - Declares a CI blocking error
      markdown("message") - Outputs markdown
      ```
  .clearfix

  section
    h2
      span Plugins
    article
      p Danger was built to be a small core, which allows others to extend her DSL via gems as plugins. You can create a new one with `danger plugin create`.
    .clearfix

    - for plugin in JSON.parse(File.read("json_data/plugins.json"))
     == partial(:plugin_doc, locals: { plugin: plugin, external: true })


  section
    h2
      span Meta
    article
      p Danger was built to be a small core, which allows others to extend her DSL via gems as plugins. You can create a new one with `danger plugin create`.
    .clearfix

javascript:
    $(function() {
      $("section.examples ul li").mouseover(function(event) {
        event.preventDefault()

        // Set the corresponding code
        var klass = $(this).attr("class").replace(" highlighted", "")

        // Set selection
        $("section.examples ul li").removeClass("highlighted")
        $(this).addClass("highlighted")

        $("section.examples div.code_chunk > div").css("display", "none")
        $("section.examples div.code_chunk div." + klass).css("display", "block")

         // Figure out the reference text
       var urls = $(this).data("repos").split(", ")
       var prs = "" //$(this).data("prs").split(", ")
       var toGithubLink = function(ref) {
           return "<a href='https://github.com/" + ref + "''>" + ref + "</a>"
        }
        var showArray = function(array) {
          if (array.length > 1) { return true }
          if (array.length == 0) { return false }
          return array[0].length > 0
        }

        // Set the reference text under the code for people to inspect
        var text = ""
        if (showArray(urls)) {
          text += "@see_repo " + urls.map(toGithubLink).join(", ")
        }
        if (showArray(urls) && showArray(prs)) {
          text += "<br/>"
        }
        if (showArray(prs)) {
          text += "@see_pr "+ prs.map(toGithubLink).join(", ")
        }
        $("section.examples ref").html(text)
      })

      // Set the selection to be the first
      $("section.examples ul li:first-child").trigger('mouseenter')
    });