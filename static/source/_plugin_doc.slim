ruby:
  def span_return(meth)
    return "" if meth["return"].empty?
    "<span class='subtle return'>" + meth["return"] + "</span>"
  end

  def span_params(meth)
    # Create the center params, `thing: OK, other: Thing`
    params_v = meth["param_couplets"]
    string_params = params_v.map do |param|
      name = param.keys.first
      param[name].nil? ? name : name + ": " + param[name]
    end.join ", "

    # Wrap it in () if there _are_ params
    string_params = "(" + string_params + ")" unless string_params.empty?
    string_params
  end

  def method_name(meth)
    meth["name"] + ' '
  end

  plugins = JSON.parse(File.read("../plugins-search-generated.json"))
  gem_for_plugin = plugins["plugins"].find { |gem_plugin| gem_plugin["gem"] == plugin["gem"] }

article.scope_code
  - if external
    h3.no_hot_pink == "<a href='/plugins/#{plugin['instance_name']}.html'>#{plugin['instance_name']}</a>"

    == markdown_h(plugin["body_md"])

    p == "Created by #{ gem_for_plugin["author"].join ", " }."

  - else

    == markdown_h(plugin["body_md"])

  h3 Reference
  - unless plugin["attributes"].empty?
    h4 Attributes
    - for attribute in plugin["attributes"]
      .fake_code
         == markdown_h(attribute.values.first["write"]["body_md"])
      code == attribute.keys.first + span_return(attribute.values.first["write"])

  - unless plugin["methods"].empty?
    h4 Methods
    - for method in plugin["methods"]
      .fake_code
         == markdown_h(method["body_md"])
      code == method_name(method) + span_params(method) + span_return(method)

article.scope_code
  h3 Examples
  - for example in plugin["example_code"]
    h4 == example["title"]
    = syntax_highlight example["text"]

  - if external

    h3 How to Install
    markdown:
      Include `gem "#{plugin["gem"]}"` in your projectâ€™s Gemfile. Then run `bundle install`.

      Then inside your Dangerfile, you can access the plugin via `#{plugin["instance_name"]}`.

    h3 Tags
    code == plugin["tags"].join(" ")

    h3 Repository
    ul
      li
        a target="_blank" href="#{gem_for_plugin["url"]}" == gem_for_plugin["url"]

    - if plugin["see"].empty? == false
      h3 See in Action
      ul
        - for link in plugin["see"]
          li
            a href="https://github.com/#{link}" == link
.clearfix
