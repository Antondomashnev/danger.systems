[{"name":"DangerProse","body_md":"Lint markdown files inside your projects.\nThis is done using the [proselint](http://proselint.com) python egg.\nResults are passed out as a table in markdown.","instance_name":"prose","example_code":["\n# Runs a linter with comma style disabled\nproselint.disable_linters = [“misc.scare_quotes”, \"misc.tense_present\"]\nproselint.lint_files “_posts/*.md”\n\n# Runs a linter with all styles, on modified and added markpown files in this PR\nproselint.lint_files"],"attributes":[{"disable_linters":{"read":{"name":"disable_linters","body_md":"Allows you to disable a collection of linters from being ran.\nYou can get a list of [them here](https://github.com/amperser/proselint#checks)","tags":[]},"write":{"name":"disable_linters=","body_md":"Allows you to disable a collection of linters from being ran.\nYou can get a list of [them here](https://github.com/amperser/proselint#checks)","tags":[]}}}],"methods":[{"name":"lint_files","body_md":"Lints the globbed files, will only fail if `proselint` cannot be installed correctly.\nGenerates a `markdown` list of warnings for the prose in a corpus of .markdown and .md files.","tags":[{"name":"param","types":["String"]},{"name":"return","types":["void"]}]},{"name":"proselint_installed?","body_md":"Determine if proselint is currently installed in the system paths.","tags":[{"name":"return","types":["Bool"]}]}],"tags":[],"see":["artsy/artsy.github.io"],"file":"/Users/orta/.rvm/gems/ruby-2.1.3/gems/danger-prose-1.0.0/lib/danger_plugin.rb"}]
